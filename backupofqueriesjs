const express = require("express");
const {Pool, Client} = require('pg');

const app = express();
const pool = new Pool({
    host: 'localhost',
   user: 'postgres',
   database: 'VMSystem',
   password: 'password',
   max: 20,
   idleTimeoutMillis: 30000,
   connectionTimeoutMillis: 2000,
  })

  // $.post(
  //   '/feedback/api',
  //   // Gather all data from the form and create a JSON object from it
  //   {
  //     name: $('#feedback-form-name').val(),
  //     email: $('#feedback-form-email').val(),
  //     title: $('#feedback-form-title').val(),
  //     message: $('#feedback-form-message').val(),
  //   };


const getallusers = function(req,res){
    const sql = `SELECT * from public.get_usersv3();`;
    pool.connect((err, client, release) => {
        if (err) {
          return console.error('Error acquiring client', err.stack);
        }
        client.query(sql, (err, result) => {
      
          release()
          if (err) {
            return console.error('Error executing query', err.stack)
          }
          
            res.render('index', {result: result,
            pageTitle: 'Movie DBManagement System'});
          
        });
        // pool.end();
      });
};


const getmovies = function(req,res){
  const sql = `SELECT * from movies;`;
  pool.connect((err, client, release) => {
      if (err) {
        return console.error('Error acquiring client', err.stack);
      }
      client.query(sql, (err, result) => {
    
        release()
        if (err) {
          return console.error('Error executing query', err.stack)
        }
        
        return res.json(res)res.redirect(301,'/');
        // {movies: result,
        //   pageTitle: 'Advanced Movie DBManagement System'});
        
         
      });
      // pool.end();
    });
};

const addusers = function(req,res){
  const sql = `(select * from movies;)`;
  pool.connect((err, client, release) => {
      if (err) {
        return console.error('Error acquiring client', err.stack);
      }
      client.query(sql, (err, result) => {
    
        release()
        if (err) {
          return console.error('Error executing query', err.stack)
        }
        
          res.render('index', {
          pageTitle: 'Data posted successful'});
        
      });
      // pool.end();
    });
};


const ugenre = function(req,res){
  const sql = `(select * from genres;)`;
  pool.connect((err, client, release) => {
      if (err) {
        return console.error('Error acquiring client', err.stack);
      }
      client.query(sql, (err, result) => {
    
        release()
        if (err) {
          return console.error('Error executing query', err.stack)
        }
        console.log(result);
          res.render('index', {user_preference: result,
          pageTitle: 'Data posted successful'});
        
      });
      // pool.end();
    });
};




module.exports.getallusers = getallusers;
module.exports.getmovies = getmovies;
module.exports.addusers = addusers;
module.exports.ugenre = ugenre;









// <div class="w3-card-4 card-space">                  
              
//               <section>
//                 <h4 action=<%= pages_path = '/ratings/' %> method="get" id="rating-film">  <input type="button" value="Refresh data" class="w3-button w3-round-large w3-green "></h4>
//                 <table class="w3-table-all w3-card-4">
//                   <thead>
    
                  
//                   <tr>                 
//                     <th>First Name:</th>
//                     <th>Last Name:</th>
//                     <th>Movie Title:</th>
//                     <th>Rating: </th>
//                     <th>Rating Title:</th>
//                   </tr>
//                   </thead>
//                   <tbody>          
                 
                    
//                     <%  ratings.rows.forEach(rating =>{ %> 
//                   <tr>                            
//                     <td><%=rating.first_name%></td>
//                     <td><%=rating.last_name%></td>
//                     <td><%=rating.title%></td>
//                     <td><%=rating.rating_num%></td>
//                     <td><%=rating.rating_title%></td>
                    
                   
//                   </tr>
//                   <%});%> 
                 
                 
//                 </tbody>
//                 </table>
//               </section>                       
//       </div>   